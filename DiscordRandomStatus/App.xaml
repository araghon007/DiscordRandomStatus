<Application x:Class="DiscordCustomStatus.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DiscordCustomStatus"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="ButtonBrushBlurple" Color="#7289DA"/>
        <SolidColorBrush x:Key="HoverButtonBrushBlurple" Color="#677BC4"/>
        <SolidColorBrush x:Key="ClickButtonBrushBlurple" Color="#5B6EAE"/>
        <SolidColorBrush x:Key="ButtonBrushRed" Color="#F04747"/>
        <SolidColorBrush x:Key="HoverButtonBrushRed" Color="#D94141"/>
        <SolidColorBrush x:Key="ClickButtonBrushRed" Color="#BF3939"/>
        <SolidColorBrush x:Key="ButtonBrushGreen" Color="#43B581"/>
        <SolidColorBrush x:Key="HoverButtonBrushOrange" Color="#EF9804"/>
        <SolidColorBrush x:Key="ClickButtonBrushOrange" Color="#E38B12"/>
        <SolidColorBrush x:Key="ButtonBrushOrange" Color="#FAA61A"/>
        <SolidColorBrush x:Key="HoverButtonBrushGreen" Color="#3CA375"/>
        <SolidColorBrush x:Key="ClickButtonBrushGreen" Color="#369168"/>
        <SolidColorBrush x:Key="DisabledButtonBrush" Color="#2F3237"/>
        <Style TargetType="Button" x:Key="BlurpleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="custBorder" Background="{TemplateBinding Background}" CornerRadius="2.5" BorderThickness="0" BorderBrush="#202225">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource HoverButtonBrushBlurple}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource ClickButtonBrushBlurple}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource DisabledButtonBrush}"/>
                                <Setter TargetName="custBorder" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="GreenButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="custBorder" Background="{TemplateBinding Background}" CornerRadius="2.5" BorderThickness="0" BorderBrush="#202225">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource HoverButtonBrushGreen}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource ClickButtonBrushGreen}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource DisabledButtonBrush}"/>
                                <Setter TargetName="custBorder" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="RedButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="custBorder" Background="{TemplateBinding Background}" CornerRadius="2.5" BorderThickness="0" BorderBrush="#202225">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource HoverButtonBrushRed}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource ClickButtonBrushRed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource DisabledButtonBrush}"/>
                                <Setter TargetName="custBorder" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="OrangeButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="custBorder" Background="{TemplateBinding Background}" CornerRadius="2.5" BorderThickness="0" BorderBrush="#202225">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource HoverButtonBrushOrange}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource ClickButtonBrushOrange}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource DisabledButtonBrush}"/>
                                <Setter TargetName="custBorder" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="RederButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="custBorder" Background="{StaticResource DisabledButtonBrush}" CornerRadius="2.5" BorderThickness="1" BorderBrush="#202225">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource HoverButtonBrushRed}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="custBorder" Property="Background" Value="{StaticResource ClickButtonBrushRed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="EmojiButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="custBorder" Background="{x:Null}" CornerRadius="2.5" BorderThickness="0" BorderBrush="#202225">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Credit to Jsinh (https://blog.jsinh.in/how-to-create-apple-macos-like-scrollbar-in-wpf/), I modified it slightly to match Discord's look -->
        
        <SolidColorBrush x:Key="ScrollBarColor" Color="#202225"/>
        <SolidColorBrush x:Key="ScrollBarBackgroundColor" Color="#2F3136"/>
        <SolidColorBrush x:Key="ScrollBarStrokeColor" Color="#36393F"/>
        <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                            <!-- This could have gone better... -->
                            <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="6"
                            BorderThickness="3"
                            BorderBrush="{DynamicResource ScrollBarStrokeColor}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="-3,0,-3,0"
                            Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag"
                                Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Margin"
                                Value="0,-3,0,-3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
            <Setter Property="Foreground"
            Value="#ADABAB" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Width"
            Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                        Width="8"
                        Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="4" Background="{DynamicResource ScrollBarBackgroundColor}"/>
                            <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                    Background="{DynamicResource ScrollBarColor}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                Value="Horizontal">
                                <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                Value="Auto" />
                                <Setter Property="Height"
                                Value="8" />
                                <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Have to replace the entire template for ScrollViewer to get rid of that annoying rectangle -->
        <!-- Thanks to Michael (http://www.nullskull.com/a/1525/styling-the-wpf-scrollviewer.aspx) for finding the ACTUAL default template -->
        <Style
       TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollBar
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Margin="0,0,-2,0"
                                x:Name="PART_VerticalScrollBar"
                                Grid.Column="1"
                                Minimum="0.0"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"        
                                Cursor="Arrow"
                                AutomationProperties.AutomationId="VerticalScrollBar"/>
                            <ScrollBar
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Margin="0,0,0,-2"
                                x:Name="PART_HorizontalScrollBar"
                                Orientation="Horizontal"
                                Grid.Row="1"
                                Minimum="0.0"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Cursor="Arrow"
                                AutomationProperties.AutomationId="HorizontalScrollBar"/>
                            <ScrollContentPresenter 

                                x:Name="PART_ScrollContentPresenter"

                                Margin="{TemplateBinding Padding}"

                                Content="{TemplateBinding Content}"

                                ContentTemplate="{TemplateBinding ContentTemplate}"

                                CanContentScroll="{TemplateBinding CanContentScroll}"/>

                            <!-- Pulverize the default Rectangle-->
                            <!--<Rectangle
                                x:Name="Corner"
                                Grid.Column="1"
                                Grid.Row="1"
                                Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->

                            <!-- Much better -->
                            <Ellipse
                                x:Name="Corner"
                                Grid.Column="1"
                                Grid.Row="1"
                                Margin="4,4,3,3"
                                Fill="{DynamicResource ScrollBarBackgroundColor}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
